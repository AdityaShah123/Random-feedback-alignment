# -*- coding: utf-8 -*-
"""CNN_backprop

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-rmuUQI9h6rdy2Ei65h0bXdMGiWY7Ul3
"""

import tensorflow as tf
from tensorflow.keras.datasets import cifar10
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Conv2D, MaxPooling2D, Flatten, Dense
from tensorflow.keras.utils import to_categorical

(train_images, train_label), (test_images, test_label) = cifar10.load_data()

# Normalize pixel values to be between 0 and 1
train_images, test_images = train_images / 255.0, test_images / 255.0

train_labels = tf.keras.utils.to_categorical(train_label, 10)
test_labels = tf.keras.utils.to_categorical(test_label, 10)

model = Sequential()
model.add(Conv2D(96, (5, 5), strides=(1, 1), activation='relu', input_shape=(32, 32, 3), padding="SAME"))
model.add(MaxPooling2D(pool_size=(3, 3), strides=(2, 2),padding="SAME"))

model.add(Conv2D(128, (5, 5), strides=(1, 1), activation='relu', padding="SAME"))
model.add(MaxPooling2D(pool_size=(3, 3), strides=(2, 2),padding="SAME"))

model.add(Conv2D(256, (5, 5), strides=(1, 1), activation='relu', padding="SAME"))
model.add(MaxPooling2D(pool_size=(3, 3), strides=(2, 2),padding="SAME"))

# Fully connected layers
model.add(Flatten())
model.add(Dense(2048, activation='relu'))
model.add(Dense(2048, activation='relu'))
model.add(Dense(10, activation='softmax'))

model.summary()

# Compile the model
model.compile(optimizer=tf.keras.optimizers.Adam(lr=0.0001),
              loss='categorical_crossentropy',
              metrics=['accuracy'])

print(train_labels.shape)

# Assuming your data and labels are available as train_data and train_labels respectively
history = model.fit(train_images, train_labels, batch_size=64, epochs=50, validation_data=(test_images, test_labels))

model